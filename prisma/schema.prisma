// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  // set to `prisma` when using PlanetScale database, otherwise set to `foreignKeys`
  relationMode = "prisma"
}

model Customer {
  id       String @id @default(uuid())
  email_id String @unique
  name     String

  rides Ride[]

  created_at DateTime @default(now())
}

model Driver {
  id       String  @id @default(uuid())
  email_id String  @unique
  name     String
  balance  Decimal @default(0) @db.Decimal(12, 2)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  cars Car[]
}

model Car {
  id             String @id @default(uuid())
  license_number String @unique

  driver    Driver @relation(fields: [driver_id], references: [id])
  driver_id String
  rides     Ride[]

  @@index([driver_id])
}

model Ride {
  id        String  @id @default(uuid())
  orig_long Decimal @db.Decimal(30, 15)
  orig_lat  Decimal @db.Decimal(30, 15)
  dest_long Decimal @db.Decimal(30, 15)
  dest_lat  Decimal @db.Decimal(30, 15)

  fare_kop Decimal    @db.Decimal(12, 2)
  status   RideStatus @default(BOOKED)

  requested_by Customer @relation(fields: [customer_id], references: [id])
  assigned_to  Car      @relation(fields: [car_id], references: [id])
  customer_id  String
  car_id       String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([car_id])
  @@index([customer_id])
}

enum RideStatus {
  BOOKED
  CANCELLED
  FINISHED
}

model Event {
  id         String    @id @default(uuid())
  context    String?
  type       EventType
  info       Json?
  created_at DateTime  @default(now())
}

enum EventType {
  RIDE_CANCELLED
  RIDE_BOOKED
  RIDE_FINISHED
  FARE_PAID
  DRIVER_PAYMENT
}
